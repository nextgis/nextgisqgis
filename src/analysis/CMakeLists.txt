################################################################################
# Copyright (C) 2020, NextGIS <info@nextgis.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
################################################################################

# sources
if (PREPARE_ONLY)
    add_flex_files_prefix(raster raster/qgsrastercalclexer.ll)
    add_bison_files_prefix(raster raster/qgsrastercalcparser.yy)
else(PREPARE_ONLY)

SET(QGIS_ANALYSIS_SRCS
  qgsanalysis.cpp

  interpolation/qgsgridfilewriter.cpp
  interpolation/qgsidwinterpolator.cpp
  interpolation/qgsinterpolator.cpp
  interpolation/qgstininterpolator.cpp
  interpolation/Bezier3D.cpp
  interpolation/CloughTocherInterpolator.cpp
  interpolation/DualEdgeTriangulation.cpp
  interpolation/HalfEdge.cpp
  interpolation/LinTriangleInterpolator.cpp
  interpolation/MathUtils.cpp
  interpolation/NormVecDecorator.cpp
  interpolation/ParametricLine.cpp
  interpolation/TriangleInterpolator.cpp
  interpolation/Triangulation.cpp
  interpolation/TriDecorator.cpp
  interpolation/Vector3D.cpp

  processing/qgsalgorithmaddincrementalfield.cpp
  processing/qgsalgorithmaddtablefield.cpp
  processing/qgsalgorithmaddxyfields.cpp
  processing/qgsalgorithmaffinetransform.cpp
  processing/qgsalgorithmapplylayerstyle.cpp
  processing/qgsalgorithmarraytranslatedfeatures.cpp
  processing/qgsalgorithmaspect.cpp
  processing/qgsalgorithmassignprojection.cpp
  processing/qgsalgorithmattributeindex.cpp
  processing/qgsalgorithmboundary.cpp
  processing/qgsalgorithmboundingbox.cpp
  processing/qgsalgorithmbuffer.cpp
  processing/qgsalgorithmcalculateoverlaps.cpp
  processing/qgsalgorithmcategorizeusingstyle.cpp
  processing/qgsalgorithmcentroid.cpp
  processing/qgsalgorithmclip.cpp
  processing/qgsalgorithmconstantraster.cpp
  processing/qgsalgorithmconvexhull.cpp
  processing/qgsalgorithmdbscanclustering.cpp
  processing/qgsalgorithmdeleteduplicategeometries.cpp
  processing/qgsalgorithmdensifygeometriesbycount.cpp
  processing/qgsalgorithmdensifygeometriesbyinterval.cpp
  processing/qgsalgorithmdetectdatasetchanges.cpp
  processing/qgsalgorithmdifference.cpp
  processing/qgsalgorithmdissolve.cpp
  processing/qgsalgorithmdrape.cpp
  processing/qgsalgorithmdropgeometry.cpp
  processing/qgsalgorithmdropmzvalues.cpp
  processing/qgsalgorithmexplode.cpp
  processing/qgsalgorithmexplodehstore.cpp
  processing/qgsalgorithmextendlines.cpp
  processing/qgsalgorithmextentfromlayer.cpp
  processing/qgsalgorithmextenttolayer.cpp
  processing/qgsalgorithmextractbinary.cpp
  processing/qgsalgorithmextractbyattribute.cpp
  processing/qgsalgorithmextractbyexpression.cpp
  processing/qgsalgorithmextractbyextent.cpp
  processing/qgsalgorithmextractbylocation.cpp
  processing/qgsalgorithmextractlayoutmapextent.cpp
  processing/qgsalgorithmextractzmvalues.cpp
  processing/qgsalgorithmextractvertices.cpp
  processing/qgsalgorithmextractspecificvertices.cpp
  processing/qgsalgorithmfiledownloader.cpp
  processing/qgsalgorithmfilter.cpp
  processing/qgsalgorithmfiltervertices.cpp
  processing/qgsalgorithmfixgeometries.cpp
  processing/qgsalgorithmforcerhr.cpp
  processing/qgsalgorithmfuzzifyraster.cpp
  processing/qgsalgorithmgeometrybyexpression.cpp
  processing/qgsalgorithmgrid.cpp
  processing/qgsalgorithmhillshade.cpp
  processing/qgsalgorithmimportphotos.cpp
  processing/qgsalgorithminterpolatepoint.cpp
  processing/qgsalgorithmintersection.cpp
  processing/qgsalgorithmjoinbyattribute.cpp
  processing/qgsalgorithmjoinbylocation.cpp
  processing/qgsalgorithmjoinbynearest.cpp
  processing/qgsalgorithmjoinwithlines.cpp
  processing/qgsalgorithmkmeansclustering.cpp
  processing/qgsalgorithmlinedensity.cpp
  processing/qgsalgorithmlineintersection.cpp
  processing/qgsalgorithmlinesubstring.cpp
  processing/qgsalgorithmloadlayer.cpp
  processing/qgsalgorithmmeancoordinates.cpp
  processing/qgsalgorithmmergelines.cpp
  processing/qgsalgorithmmergevector.cpp
  processing/qgsalgorithmminimumenclosingcircle.cpp
  processing/qgsalgorithmmultiparttosinglepart.cpp
  processing/qgsalgorithmmultiringconstantbuffer.cpp
  processing/qgsalgorithmnearestneighbouranalysis.cpp
  processing/qgsalgorithmoffsetlines.cpp
  processing/qgsalgorithmorderbyexpression.cpp
  processing/qgsalgorithmorientedminimumboundingbox.cpp
  processing/qgsalgorithmorthogonalize.cpp
  processing/qgsalgorithmpackage.cpp
  processing/qgsalgorithmpixelcentroidsfrompolygons.cpp
  processing/qgsalgorithmarrayoffsetlines.cpp
  processing/qgsalgorithmpolygonstolines.cpp
  processing/qgsalgorithmpointonsurface.cpp
  processing/qgsalgorithmpointsinpolygon.cpp
  processing/qgsalgorithmpointtolayer.cpp
  processing/qgsalgorithmpointsalonggeometry.cpp
  processing/qgsalgorithmpointslayerfromtable.cpp
  processing/qgsalgorithmpoleofinaccessibility.cpp
  processing/qgsalgorithmprojectpointcartesian.cpp
  processing/qgsalgorithmpromotetomultipart.cpp
  processing/qgsalgorithmrandomextract.cpp
  processing/qgsalgorithmrandompointsextent.cpp
  processing/qgsalgorithmrasterlayeruniquevalues.cpp
  processing/qgsalgorithmrasterlogicalop.cpp
  processing/qgsalgorithmrasterize.cpp
  processing/qgsalgorithmrasterstatistics.cpp
  processing/qgsalgorithmrastersurfacevolume.cpp
  processing/qgsalgorithmrasterzonalstats.cpp
  processing/qgsalgorithmreclassifybylayer.cpp
  processing/qgsalgorithmrectanglesovalsdiamonds.cpp
  processing/qgsalgorithmremoveduplicatesbyattribute.cpp
  processing/qgsalgorithmremoveduplicatevertices.cpp
  processing/qgsalgorithmremoveholes.cpp
  processing/qgsalgorithmremovenullgeometry.cpp
  processing/qgsalgorithmrenamelayer.cpp
  processing/qgsalgorithmrenametablefield.cpp
  processing/qgsalgorithmrepairshapefile.cpp
  processing/qgsalgorithmreverselinedirection.cpp
  processing/qgsalgorithmrotate.cpp
  processing/qgsalgorithmruggedness.cpp
  processing/qgsalgorithmsaveselectedfeatures.cpp
  processing/qgsalgorithmsegmentize.cpp
  processing/qgsalgorithmsetlayerencoding.cpp
  processing/qgsalgorithmsetmvalue.cpp
  processing/qgsalgorithmsetzvalue.cpp
  processing/qgsalgorithmshpencodinginfo.cpp
  processing/qgsalgorithmsimplify.cpp
  processing/qgsalgorithmsinglesidedbuffer.cpp
  processing/qgsalgorithmslope.cpp
  processing/qgsalgorithmsmooth.cpp
  processing/qgsalgorithmsnaptogrid.cpp
  processing/qgsalgorithmspatialindex.cpp
  processing/qgsalgorithmsplitfeaturesbyattributecharacter.cpp
  processing/qgsalgorithmsplitlineantimeridian.cpp
  processing/qgsalgorithmsplitlinesbylength.cpp
  processing/qgsalgorithmsplitwithlines.cpp
  processing/qgsalgorithmstringconcatenation.cpp
  processing/qgsalgorithmswapxy.cpp
  processing/qgsalgorithmsubdivide.cpp
  processing/qgsalgorithmsumlinelength.cpp
  processing/qgsalgorithmsymmetricaldifference.cpp
  processing/qgsalgorithmtaperedbuffer.cpp
  processing/qgsalgorithmtransect.cpp
  processing/qgsalgorithmtransform.cpp
  processing/qgsalgorithmtranslate.cpp
  processing/qgsalgorithmtruncatetable.cpp
  processing/qgsalgorithmunion.cpp
  processing/qgsalgorithmuniquevalueindex.cpp
  processing/qgsalgorithmvectorize.cpp
  processing/qgsalgorithmwedgebuffers.cpp
  processing/qgsalgorithmzonalhistogram.cpp
  processing/qgsalgorithmzonalstatistics.cpp
  processing/qgsbookmarkalgorithms.cpp
  processing/qgsprojectstylealgorithms.cpp
  processing/qgsstylealgorithms.cpp

  processing/qgsoverlayutils.cpp
  processing/qgsrasteranalysisutils.cpp
  processing/qgsreclassifyutils.cpp

  raster/qgsalignraster.cpp
#   raster/qgsexiftools.cpp
  raster/qgsninecellfilter.cpp
  raster/qgsruggednessfilter.cpp
  raster/qgsderivativefilter.cpp
  raster/qgshillshadefilter.cpp
  raster/qgskde.cpp
  raster/qgsslopefilter.cpp
  raster/qgsaspectfilter.cpp
  raster/qgstotalcurvaturefilter.cpp
  raster/qgsrelief.cpp
  raster/qgsrastercalcnode.cpp
  raster/qgsrastercalculator.cpp
  raster/qgsrastermatrix.cpp
  vector/qgsgeometrysnapper.cpp
  vector/qgsgeometrysnappersinglesource.cpp
  vector/qgszonalstatistics.cpp

  mesh/qgsmeshcalcnode.cpp
  mesh/qgsmeshcalculator.cpp
  mesh/qgsmeshcalcutils.cpp
  mesh/qgsmeshcontours.cpp

  vector/geometry_checker/qgsfeaturepool.cpp
  vector/geometry_checker/qgsgeometryanglecheck.cpp
  vector/geometry_checker/qgsgeometryareacheck.cpp
  vector/geometry_checker/qgsgeometrycheck.cpp
  vector/geometry_checker/qgsgeometrycheckresolutionmethod.cpp
  vector/geometry_checker/qgsgeometrycheckcontext.cpp
  vector/geometry_checker/qgsgeometrychecker.cpp
  vector/geometry_checker/qgsgeometrycheckerror.cpp
  vector/geometry_checker/qgsgeometrycheckerutils.cpp
  vector/geometry_checker/qgsgeometrycheckregistry.cpp
  vector/geometry_checker/qgsgeometrycontainedcheck.cpp
  vector/geometry_checker/qgsgeometrydanglecheck.cpp
  vector/geometry_checker/qgsgeometrydegeneratepolygoncheck.cpp
  vector/geometry_checker/qgsgeometryduplicatecheck.cpp
  vector/geometry_checker/qgsgeometryduplicatenodescheck.cpp
  vector/geometry_checker/qgsgeometryfollowboundariescheck.cpp
  vector/geometry_checker/qgsgeometrygapcheck.cpp
  vector/geometry_checker/qgsgeometrymissingvertexcheck.cpp
  vector/geometry_checker/qgsgeometryholecheck.cpp
  vector/geometry_checker/qgsgeometrylineintersectioncheck.cpp
  vector/geometry_checker/qgsgeometrylinelayerintersectioncheck.cpp
  vector/geometry_checker/qgsgeometrymultipartcheck.cpp
  vector/geometry_checker/qgsgeometryoverlapcheck.cpp
  vector/geometry_checker/qgsgeometrypointcoveredbylinecheck.cpp
  vector/geometry_checker/qgsgeometrypointinpolygoncheck.cpp
  vector/geometry_checker/qgsgeometrysegmentlengthcheck.cpp
  vector/geometry_checker/qgsgeometryselfcontactcheck.cpp
  vector/geometry_checker/qgsgeometryselfintersectioncheck.cpp
  vector/geometry_checker/qgsgeometrysliverpolygoncheck.cpp
  vector/geometry_checker/qgsgeometrytypecheck.cpp
  vector/geometry_checker/qgsgeometryisvalidcheck.cpp
  vector/geometry_checker/qgssinglegeometrycheck.cpp
  vector/geometry_checker/qgssinglegeometrycheck.cpp
  vector/geometry_checker/qgsvectordataproviderfeaturepool.cpp
  vector/geometry_checker/qgsvectorlayerfeaturepool.cpp
  
  ${CMAKE_CURRENT_SOURCE_DIR}/flex_qgsrastercalclexer.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/flex_qgsmeshcalclexer.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/qgsrastercalcparser.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/qgsmeshcalcparser.cpp
)

SET(QGIS_ANALYSIS_HDRS
  qgsanalysis.h

  interpolation/Bezier3D.h
  interpolation/CloughTocherInterpolator.h
  interpolation/DualEdgeTriangulation.h
  interpolation/HalfEdge.h
  interpolation/LinTriangleInterpolator.h
  interpolation/MathUtils.h
  interpolation/NormVecDecorator.h
  interpolation/ParametricLine.h
  interpolation/TriDecorator.h
  interpolation/TriangleInterpolator.h
  interpolation/Triangulation.h
  interpolation/Vector3D.h
  interpolation/qgsgridfilewriter.h
  interpolation/qgsidwinterpolator.h
  interpolation/qgsinterpolator.h
  interpolation/qgstininterpolator.h

  mesh/qgsmeshcalcnode.h
  mesh/qgsmeshcalculator.h
  mesh/qgsmeshcalcutils.h
  mesh/qgsmeshcontours.h

  processing/qgsalgorithmfiledownloader.h
  processing/qgsalgorithmimportphotos.h
  processing/qgsprojectstylealgorithms.h
  processing/qgsreclassifyutils.h

  raster/qgsalignraster.h
  raster/qgsaspectfilter.h
  raster/qgsderivativefilter.h
#   raster/qgsexiftools.h
  raster/qgshillshadefilter.h
  raster/qgskde.h
  raster/qgsninecellfilter.h
  raster/qgsrastercalcnode.h
  raster/qgsrastercalculator.h
  raster/qgsrastermatrix.h
  raster/qgsrelief.h
  raster/qgsruggednessfilter.h
  raster/qgsslopefilter.h
  raster/qgstotalcurvaturefilter.h

  vector/geometry_checker/qgsfeaturepool.h
  vector/geometry_checker/qgsgeometryanglecheck.h
  vector/geometry_checker/qgsgeometryareacheck.h
  vector/geometry_checker/qgsgeometrycheck.h
  vector/geometry_checker/qgsgeometrycheckresolutionmethod.h
  vector/geometry_checker/qgsgeometrycheckcontext.h
  vector/geometry_checker/qgsgeometrychecker.h
  vector/geometry_checker/qgsgeometrycheckerror.h
  vector/geometry_checker/qgsgeometrycheckerutils.h
  vector/geometry_checker/qgsgeometrycheckfactory.h
  vector/geometry_checker/qgsgeometrycheckregistry.h
  vector/geometry_checker/qgsgeometrycontainedcheck.h
  vector/geometry_checker/qgsgeometrydanglecheck.h
  vector/geometry_checker/qgsgeometrydegeneratepolygoncheck.h
  vector/geometry_checker/qgsgeometryduplicatecheck.h
  vector/geometry_checker/qgsgeometryduplicatenodescheck.h
  vector/geometry_checker/qgsgeometryfollowboundariescheck.h
  vector/geometry_checker/qgsgeometrygapcheck.h
  vector/geometry_checker/qgsgeometryholecheck.h
  vector/geometry_checker/qgsgeometryisvalidcheck.h
  vector/geometry_checker/qgsgeometrylineintersectioncheck.h
  vector/geometry_checker/qgsgeometrylinelayerintersectioncheck.h
  vector/geometry_checker/qgsgeometrymissingvertexcheck.h
  vector/geometry_checker/qgsgeometrymultipartcheck.h
  vector/geometry_checker/qgsgeometryoverlapcheck.h
  vector/geometry_checker/qgsgeometrypointcoveredbylinecheck.h
  vector/geometry_checker/qgsgeometrypointinpolygoncheck.h
  vector/geometry_checker/qgsgeometrysegmentlengthcheck.h
  vector/geometry_checker/qgsgeometryselfcontactcheck.h
  vector/geometry_checker/qgsgeometryselfintersectioncheck.h
  vector/geometry_checker/qgsgeometrysliverpolygoncheck.h
  vector/geometry_checker/qgsgeometrytypecheck.h
  vector/geometry_checker/qgssinglegeometrycheck.h
  vector/geometry_checker/qgsvectordataproviderfeaturepool.h
  vector/geometry_checker/qgsvectorlayerfeaturepool.h

  vector/qgsgeometrysnapper.h
  vector/qgsgeometrysnappersinglesource.h
  vector/qgszonalstatistics.h
)

# find_anyproject(EXIV REQUIRED)

INCLUDE_DIRECTORIES(SYSTEM ${SPATIALITE_INCLUDE_DIR})
INCLUDE_DIRECTORIES(SYSTEM ${SPATIALINDEX_INCLUDE_DIR})
INCLUDE_DIRECTORIES(SYSTEM ${SQLITE3_INCLUDE_DIR})
INCLUDE_DIRECTORIES(BEFORE raster)
INCLUDE_DIRECTORIES(BEFORE mesh)

IF(NOT MSVC)
  SET_SOURCE_FILES_PROPERTIES(
    ${CMAKE_BINARY_DIR}/src/analysis/qgsrastercalcparser.cpp
    ${CMAKE_BINARY_DIR}/src/analysis/qgsmeshcalcparser.cpp
    PROPERTIES COMPILE_FLAGS "-w"
  )
ELSE(NOT MSVC)
  IF(PEDANTIC)
    # 4127 expression is constant
    # 4702 unreachable code
    SET_SOURCE_FILES_PROPERTIES(
      ${CMAKE_BINARY_DIR}/src/analysis/qgsrastercalcparser.cpp
      ${CMAKE_BINARY_DIR}/src/analysis/qgsmeshcalcparser.cpp
      PROPERTIES COMPILE_FLAGS "-wd4127 -wd4702"
    )
  ENDIF(PEDANTIC)
ENDIF(NOT MSVC)

IF (CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  SET_SOURCE_FILES_PROPERTIES(
    interpolation/qgstininterpolator.cpp
    interpolation/NormVecDecorator.cpp
    interpolation/CloughTocherInterpolator.cpp
    PROPERTIES COMPILE_FLAGS "-Wno-overloaded-virtual"
  )
ENDIF (CMAKE_CXX_COMPILER_ID MATCHES "Clang")

# install headers

INCLUDE_DIRECTORIES(
  ${CMAKE_CURRENT_SOURCE_DIR}
  ${CMAKE_SOURCE_DIR}/src/core/
  ${CMAKE_SOURCE_DIR}/src/core/geometry
  ${CMAKE_SOURCE_DIR}/src/core/labeling
  ${CMAKE_SOURCE_DIR}/src/core/processing
  ${CMAKE_SOURCE_DIR}/src/core/raster
  ${CMAKE_SOURCE_DIR}/src/core/mesh
  ${CMAKE_SOURCE_DIR}/src/core/providers/meshmemory
  ${CMAKE_SOURCE_DIR}/src/core/symbology
  ${CMAKE_SOURCE_DIR}/src/core/effects
  ${CMAKE_SOURCE_DIR}/src/core/metadata
  ${CMAKE_SOURCE_DIR}/src/core/expression
  ${CMAKE_SOURCE_DIR}/src/analysis/vector/geometry_checker
#   ${CMAKE_SOURCE_DIR}/external
#   ${CMAKE_SOURCE_DIR}/external/nlohmann

  ${CMAKE_BINARY_DIR}/src/core
  ${CMAKE_BINARY_DIR}/src/analysis
  interpolation
  #network
)
INCLUDE_DIRECTORIES(SYSTEM
  ${SPATIALINDEX_INCLUDE_DIR} # before GEOS for case-insensitive filesystems
  ${GEOS_INCLUDE_DIR}
  ${GDAL_INCLUDE_DIR}
  ${SQLITE3_INCLUDE_DIR}
  ${EXIV_INCLUDE_DIR}
)

IF(HAVE_OPENCL)
    INCLUDE_DIRECTORIES(SYSTEM ${OpenCL_INCLUDE_DIR})
ENDIF(HAVE_OPENCL)



#############################################################
# qgis_analysis library
    SET(LIB_NAME ${NG_PREFIX}qgis_analysis)
    SET(TARGETS ${TARGETS} ${LIB_NAME} PARENT_SCOPE)
    
    ADD_LIBRARY(${LIB_NAME} SHARED ${QGIS_ANALYSIS_SRCS} ${QGIS_ANALYSIS_HDRS})

    GENERATE_EXPORT_HEADER(
       ${LIB_NAME}
       BASE_NAME ANALYSIS
       EXPORT_FILE_NAME qgis_analysis.h
    )
    IF(MSVC)
      SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES LINK_FLAGS "/FORCE:MULTIPLE")
    ENDIF(MSVC)

    SET(QGIS_ANALYSIS_HDRS ${QGIS_ANALYSIS_HDRS} ${CMAKE_CURRENT_BINARY_DIR}/qgis_analysis.h)

    IF(NOT APPLE)
    #TODO  INSTALL(FILES ${QGIS_ANALYSIS_HDRS} DESTINATION ${QGIS_INCLUDE_DIR})
    ELSE(NOT APPLE)
      SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES
        # no moc headers, messes up PROPERTIES syntax
        CLEAN_DIRECT_OUTPUT 1
        FRAMEWORK 1
        FRAMEWORK_VERSION "${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}"
        MACOSX_FRAMEWORK_INFO_PLIST "${CMAKE_SOURCE_DIR}/mac/framework.info.plist.in"
        MACOSX_FRAMEWORK_SHORT_VERSION_STRING ${COMPLETE_VERSION}
        MACOSX_FRAMEWORK_IDENTIFIER org.qgis.qgis3_analysis
        BUILD_WITH_INSTALL_RPATH TRUE
        PUBLIC_HEADER "${QGIS_ANALYSIS_HDRS}"
        LINK_FLAGS "${CMAKE_SHARED_LINKER_FLAGS}"
      )
      # generated export header does not get copied with PUBLIC_HEADER files
      ADD_CUSTOM_COMMAND(TARGET ${LIB_NAME}
        POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy qgis_analysis.h
                "${QGIS_OUTPUT_DIRECTORY}/${QGIS_LIB_SUBDIR}/qgis_analysis.framework/Headers"
        WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
        DEPENDS qgis_analysis.h
      )
    ENDIF(NOT APPLE)

    #generate unversioned libs for android
    IF (NOT ANDROID)
      SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES
        VERSION ${VERSION}
        SOVERSION ${VERSION}
        )
    ENDIF (NOT ANDROID)

    TARGET_LINK_LIBRARIES(
      ${LIB_NAME}
      ${NG_PREFIX}qgis_core
      ${EXIV_LIBRARIES}
      )

    IF(HAVE_OPENCL)
        TARGET_LINK_LIBRARIES(${LIB_NAME} ${OpenCL_LIBRARIES})
    ENDIF(HAVE_OPENCL)

    TARGET_COMPILE_DEFINITIONS(${LIB_NAME} PRIVATE "-DQT_NO_FOREACH")

    # clang-tidy
    IF(CLANG_TIDY_EXE)
      SET_TARGET_PROPERTIES(
        ${LIB_NAME} PROPERTIES
        CXX_CLANG_TIDY "${DO_CLANG_TIDY}"
      )
    ENDIF(CLANG_TIDY_EXE)

    # install
    if(NOT SKIP_INSTALL_LIBRARIES AND NOT SKIP_INSTALL_ALL)     
        install(TARGETS ${LIB_NAME} 
            EXPORT ${PACKAGE_UPPER_NAME}Targets
            RUNTIME DESTINATION ${INSTALL_BIN_DIR}
            ARCHIVE DESTINATION ${INSTALL_LIB_DIR}
            LIBRARY DESTINATION ${INSTALL_LIB_DIR}
            INCLUDES DESTINATION ${INSTALL_INC_DIR}
            FRAMEWORK DESTINATION ${INSTALL_LIB_DIR}
        )
        
        install(FILES ${QGIS_ANALYSIS_HDRS} 
            DESTINATION ${INSTALL_INC_DIR}
        )
    endif()
endif(PREPARE_ONLY)