--- a/src/core/geometry/qgsmultilinestring.cpp	2022-02-18 15:06:10.000000000 +0300
+++ b/src/core/geometry/qgsmultilinestring.cpp	2022-04-06 18:40:08.000000000 +0300
@@ -22,7 +22,7 @@
 #include "qgslinestring.h"
 #include "qgsmulticurve.h"
 
-#include <nlohmann/json.hpp>
+// #include <nlohmann/json.hpp>
 #include <QJsonObject>
 
 QgsMultiLineString::QgsMultiLineString()
@@ -110,7 +110,7 @@
 
 json QgsMultiLineString::asJsonObject( int precision ) const
 {
-  json coordinates( json::array( ) );
+  CPLJSONArray coordinates;
   for ( const QgsAbstractGeometry *geom : mGeometries )
   {
     if ( qgsgeometry_cast<const QgsCurve *>( geom ) )
@@ -118,14 +118,13 @@
       const QgsLineString *lineString = static_cast<const QgsLineString *>( geom );
       QgsPointSequence pts;
       lineString->points( pts );
-      coordinates.push_back( QgsGeometryUtils::pointsToJson( pts, precision ) );
+      coordinates.Add( QgsGeometryUtils::pointsToJson( pts, precision ) );
     }
   }
-  return
-  {
-    { "type",  "MultiLineString" },
-    { "coordinates", coordinates }
-  };
+  json out;
+  out.Add("type",  "MultiLineString");
+  out.Add("coordinates", coordinates);
+  return out;
 }
 
 bool QgsMultiLineString::addGeometry( QgsAbstractGeometry *g )
