--- a/src/core/qgsapplication.h	2022-02-18 15:06:10.000000000 +0300
+++ b/src/core/qgsapplication.h	2022-04-25 18:33:16.000000000 +0300
@@ -20,6 +20,7 @@
 #include <QEvent>
 #include <QStringList>
 #include <QColor>
+#include <QVector>
 
 #include <memory>
 #include "qgis_sip.h"
@@ -37,7 +38,7 @@
 class QgsColorSchemeRegistry;
 class QgsPaintEffectRegistry;
 class QgsProjectStorageRegistry;
-class QgsExternalStorageRegistry;
+// class QgsExternalStorageRegistry;
 class QgsLocalizedDataPathRegistry;
 class QgsRendererRegistry;
 class QgsSvgCache;
@@ -45,8 +46,8 @@
 class QgsSourceCache;
 class QgsSymbolLayerRegistry;
 class QgsRasterRendererRegistry;
-class QgsGpsConnectionRegistry;
-class QgsBabelFormatRegistry;
+// class QgsGpsConnectionRegistry;
+// class QgsBabelFormatRegistry;
 class QgsDataItemProviderRegistry;
 class QgsPluginLayerRegistry;
 class QgsClassificationMethodRegistry;
@@ -159,6 +160,9 @@
     static const char *QGIS_ORGANIZATION_NAME;
     static const char *QGIS_ORGANIZATION_DOMAIN;
     static const char *QGIS_APPLICATION_NAME;
+    static const char *NGQGIS_ORGANIZATION_NAME;
+    static const char *NGQGIS_ORGANIZATION_DOMAIN;
+    static const char *NGQGIS_APPLICATION_NAME;
 #ifndef SIP_RUN
 
     /**
@@ -369,6 +373,7 @@
 
     //! Returns the common root path of all application data directories.
     static QString pkgDataPath();
+    static QString fontsPath();
 
     //! Returns the path to the currently active theme directory.
     static QString activeThemePath();
@@ -581,9 +586,9 @@
     static QString cfgIntDir() SIP_SKIP;
 #endif
     //! Returns path to the source directory. Valid only when running from build directory
-    static QString buildSourcePath();
+    // static QString buildSourcePath();
     //! Returns path to the build output directory. Valid only when running from build directory
-    static QString buildOutputPath();
+    // static QString buildOutputPath();
 
     /**
      * Sets the GDAL_SKIP environment variable to include the specified driver
@@ -772,13 +777,13 @@
      * Returns the application's GPS connection registry, used for managing GPS connections.
      * \since QGIS 3.0
      */
-    static QgsGpsConnectionRegistry *gpsConnectionRegistry() SIP_KEEPREFERENCE;
+    // static QgsGpsConnectionRegistry *gpsConnectionRegistry() SIP_KEEPREFERENCE;
 
     /**
      * Returns the application's GPSBabel format registry, used for managing GPSBabel formats.
      * \since QGIS 3.22
      */
-    static QgsBabelFormatRegistry *gpsBabelFormatRegistry() SIP_KEEPREFERENCE;
+    // static QgsBabelFormatRegistry *gpsBabelFormatRegistry() SIP_KEEPREFERENCE;
 
     /**
      * Returns the application's plugin layer registry, used for managing plugin layer types.
@@ -914,7 +919,7 @@
      * Returns registry of available external storage implementations.
      * \since QGIS 3.20
      */
-    static QgsExternalStorageRegistry *externalStorageRegistry() SIP_KEEPREFERENCE;
+    // static QgsExternalStorageRegistry *externalStorageRegistry() SIP_KEEPREFERENCE;
 
     /**
      * Returns the registry of data repositories
@@ -1078,9 +1083,10 @@
     QMap<QString, QIcon> mIconCache;
     QMap<Cursor, QCursor> mCursorCache;
 
-    QTranslator *mQgisTranslator = nullptr;
-    QTranslator *mQtTranslator = nullptr;
-    QTranslator *mQtBaseTranslator = nullptr;
+    // QTranslator *mQgisTranslator = nullptr;
+    // QTranslator *mQtTranslator = nullptr;
+    // QTranslator *mQtBaseTranslator = nullptr;
+    QVector<QTranslator*> mTranslators;
 
     QgsDataItemProviderRegistry *mDataItemProviderRegistry = nullptr;
     QgsAuthManager *mAuthManager = nullptr;
@@ -1097,8 +1103,8 @@
       QgsLocalizedDataPathRegistry *mLocalizedDataPathRegistry = nullptr;
       QgsNumericFormatRegistry *mNumericFormatRegistry = nullptr;
       QgsFieldFormatterRegistry *mFieldFormatterRegistry = nullptr;
-      QgsGpsConnectionRegistry *mGpsConnectionRegistry = nullptr;
-      QgsBabelFormatRegistry *mGpsBabelFormatRegistry = nullptr;
+    //   QgsGpsConnectionRegistry *mGpsConnectionRegistry = nullptr;
+    //   QgsBabelFormatRegistry *mGpsBabelFormatRegistry = nullptr;
       QgsNetworkContentFetcherRegistry *mNetworkContentFetcherRegistry = nullptr;
       QgsScaleBarRendererRegistry *mScaleBarRendererRegistry = nullptr;
       QgsValidityCheckRegistry *mValidityCheckRegistry = nullptr;
@@ -1109,7 +1115,7 @@
       QgsProcessingRegistry *mProcessingRegistry = nullptr;
       QgsConnectionRegistry *mConnectionRegistry = nullptr;
       std::unique_ptr<QgsProjectStorageRegistry> mProjectStorageRegistry;
-      QgsExternalStorageRegistry *mExternalStorageRegistry = nullptr;
+    //   QgsExternalStorageRegistry *mExternalStorageRegistry = nullptr;
       QgsPageSizeRegistry *mPageSizeRegistry = nullptr;
       QgsRasterRendererRegistry *mRasterRendererRegistry = nullptr;
       QgsRendererRegistry *mRendererRegistry = nullptr;
