--- a/src/gui/qgsgui.cpp	2022-02-18 15:06:10.000000000 +0300
+++ b/src/gui/qgsgui.cpp	2022-04-25 18:33:18.000000000 +0300
@@ -63,7 +63,7 @@
 #include "qgsprovidersourcewidgetproviderregistry.h"
 #include "qgsrelationwidgetregistry.h"
 #include "qgssettingsregistrygui.h"
-#include "qgshistoryproviderregistry.h"
+// #include "qgshistoryproviderregistry.h"
 
 QgsGui *QgsGui::instance()
 {
@@ -166,10 +166,10 @@
   return instance()->mProviderGuiRegistry;
 }
 
-QgsHistoryProviderRegistry *QgsGui::historyProviderRegistry()
-{
-  return instance()->mHistoryProviderRegistry;
-}
+// QgsHistoryProviderRegistry *QgsGui::historyProviderRegistry()
+// {
+//   return instance()->mHistoryProviderRegistry;
+// }
 
 void QgsGui::enableAutoGeometryRestore( QWidget *widget, const QString &key )
 {
@@ -213,7 +213,7 @@
   delete mEditorWidgetRegistry;
   delete mMapLayerActionRegistry;
   delete mSourceSelectProviderRegistry;
-  delete mHistoryProviderRegistry;
+//   delete mHistoryProviderRegistry;
   delete mShortcutsManager;
   delete mNative;
   delete mNumericFormatGuiRegistry;
@@ -275,8 +275,8 @@
   mCodeEditorColorSchemeRegistry = new QgsCodeEditorColorSchemeRegistry();
 
   // provider gui registry initialize QgsProviderRegistry too
-  mHistoryProviderRegistry = new QgsHistoryProviderRegistry();
-  mHistoryProviderRegistry->addDefaultProviders();
+//   mHistoryProviderRegistry = new QgsHistoryProviderRegistry();
+//   mHistoryProviderRegistry->addDefaultProviders();
 
   mProviderGuiRegistry = new QgsProviderGuiRegistry( QgsApplication::pluginPath() );
   mProjectStorageGuiRegistry = new QgsProjectStorageGuiRegistry();
