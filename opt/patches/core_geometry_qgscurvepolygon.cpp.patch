--- a/src/core/geometry/qgscurvepolygon.cpp	2022-02-18 15:06:10.000000000 +0300
+++ b/src/core/geometry/qgscurvepolygon.cpp	2022-03-21 09:56:36.000000000 +0300
@@ -31,7 +31,7 @@
 #include <QPainter>
 #include <QPainterPath>
 #include <memory>
-#include <nlohmann/json.hpp>
+// #include <nlohmann/json.hpp>
 
 QgsCurvePolygon::QgsCurvePolygon()
 {
@@ -419,13 +419,13 @@
 
 json QgsCurvePolygon::asJsonObject( int precision ) const
 {
-  json coordinates( json::array( ) );
+  CPLJSONArray coordinates;
   if ( auto *lExteriorRing = exteriorRing() )
   {
     std::unique_ptr< QgsLineString > exteriorLineString( lExteriorRing->curveToLine() );
     QgsPointSequence exteriorPts;
     exteriorLineString->points( exteriorPts );
-    coordinates.push_back( QgsGeometryUtils::pointsToJson( exteriorPts, precision ) );
+    coordinates.Add( QgsGeometryUtils::pointsToJson( exteriorPts, precision ) );
 
     std::unique_ptr< QgsLineString > interiorLineString;
     for ( int i = 0, n = numInteriorRings(); i < n; ++i )
@@ -433,14 +433,13 @@
       interiorLineString.reset( interiorRing( i )->curveToLine() );
       QgsPointSequence interiorPts;
       interiorLineString->points( interiorPts );
-      coordinates.push_back( QgsGeometryUtils::pointsToJson( interiorPts, precision ) );
+      coordinates.Add( QgsGeometryUtils::pointsToJson( interiorPts, precision ) );
     }
   }
-  return
-  {
-    {  "type", "Polygon"  },
-    { "coordinates", coordinates }
-  };
+  CPLJSONObject out;
+  out.Add("type", "Polygon");
+  out.Add("coordinates", coordinates);
+  return out;
 }
 
 QString QgsCurvePolygon::asKml( int precision ) const
