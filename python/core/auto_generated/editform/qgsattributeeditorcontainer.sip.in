/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/editform/qgsattributeeditorcontainer.h                      *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/


class QgsAttributeEditorContainer : QgsAttributeEditorElement
{
%Docstring(signature="appended")
This is a container for attribute editors, used to group them visually in the
attribute form if it is set to the drag and drop designer.
%End

%TypeHeaderCode
#include "qgsattributeeditorcontainer.h"
%End
  public:

    QgsAttributeEditorContainer( const QString &name, QgsAttributeEditorElement *parent, const QColor &backgroundColor = QColor() );
%Docstring
Creates a new attribute editor container

:param name: The name to show as title
:param parent: The parent. May be another container.
:param backgroundColor: The optional background color of the container.
%End


    ~QgsAttributeEditorContainer();

    virtual void addChildElement( QgsAttributeEditorElement *element /Transfer/ );
%Docstring
Add a child element to this container. This may be another container, a field or a relation.

:param element: The element to add as child
%End

    virtual void setIsGroupBox( bool isGroupBox );
%Docstring
Determines if this container is rendered as collapsible group box or tab in a tabwidget

:param isGroupBox: If ``True``, this will be a group box
%End

    virtual bool isGroupBox() const;
%Docstring
Returns if this container is going to be rendered as a group box

:return: ``True`` if it will be a group box, ``False`` if it will be a tab
%End

    QList<QgsAttributeEditorElement *> children() const;
%Docstring
Gets a list of the children elements of this container

:return: A list of elements
%End

    virtual QList<QgsAttributeEditorElement *> findElements( AttributeEditorType type ) const;
%Docstring
Traverses the element tree to find any element of the specified type

:param type: The type which should be searched

:return: A list of elements of the type which has been searched for
%End

    void clear();
%Docstring
Clear all children from this container.
%End

    void setName( const QString &name );
%Docstring
Change the name of this container
%End

    int columnCount() const;
%Docstring
Gets the number of columns in this group
%End

    void setColumnCount( int columnCount );
%Docstring
Set the number of columns in this group
%End

    virtual QgsAttributeEditorElement *clone( QgsAttributeEditorElement *parent ) const /Factory/;

%Docstring
Creates a deep copy of this element. To be implemented by subclasses.

.. versionadded:: 3.0
%End

    QgsOptionalExpression visibilityExpression() const;
%Docstring
The visibility expression is used in the attribute form to
show or hide this container based on an expression incorporating
the field value controlled by editor widgets.

.. versionadded:: 3.0
%End

    void setVisibilityExpression( const QgsOptionalExpression &visibilityExpression );
%Docstring
The visibility expression is used in the attribute form to
show or hide this container based on an expression incorporating
the field value controlled by editor widgets.

.. versionadded:: 3.0
%End

    QColor backgroundColor() const;
%Docstring
backgroundColor

:return: background color of the container

.. versionadded:: 3.8
%End

    void setBackgroundColor( const QColor &backgroundColor );
%Docstring
Sets the background color to ``backgroundColor``
%End

};


/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/editform/qgsattributeeditorcontainer.h                      *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
